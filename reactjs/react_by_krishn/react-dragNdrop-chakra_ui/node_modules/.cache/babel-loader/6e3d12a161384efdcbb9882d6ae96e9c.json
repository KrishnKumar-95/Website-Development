{"ast":null,"code":"import { invariant } from '@react-dnd/invariant';\nimport { END_DRAG } from './types.mjs';\nexport function createEndDrag(manager) {\n  return function endDrag() {\n    const monitor = manager.getMonitor();\n    const registry = manager.getRegistry();\n    verifyIsDragging(monitor);\n    const sourceId = monitor.getSourceId();\n\n    if (sourceId != null) {\n      const source = registry.getSource(sourceId, true);\n      source.endDrag(monitor, sourceId);\n      registry.unpinSource();\n    }\n\n    return {\n      type: END_DRAG\n    };\n  };\n}\n\nfunction verifyIsDragging(monitor) {\n  invariant(monitor.isDragging(), 'Cannot call endDrag while not dragging.');\n}","map":{"version":3,"sources":["/home/ubkrishn/Desktop/Website Development/reactjs/react_by_krishn/react-dragNdrop-chakra_ui/node_modules/dnd-core/src/actions/dragDrop/endDrag.ts"],"names":["invariant","END_DRAG","createEndDrag","manager","endDrag","monitor","getMonitor","registry","getRegistry","verifyIsDragging","sourceId","getSourceId","source","getSource","unpinSource","type","isDragging"],"mappings":"AAAA,SAASA,SAAT,QAA0B,sBAA1B;AAMA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAM,SAAUC,aAAV,CAAwBC,OAAxB,EAAkD;AACvD,SAAO,SAASC,OAAT,GAAmC;AACzC,UAAMC,OAAO,GAAGF,OAAO,CAACG,UAARH,EAAhB;AACA,UAAMI,QAAQ,GAAGJ,OAAO,CAACK,WAARL,EAAjB;AACAM,IAAAA,gBAAgB,CAACJ,OAAD,CAAhBI;AAEA,UAAMC,QAAQ,GAAGL,OAAO,CAACM,WAARN,EAAjB;;AACA,QAAIK,QAAQ,IAAI,IAAhB,EAAsB;AACrB,YAAME,MAAM,GAAGL,QAAQ,CAACM,SAATN,CAAmBG,QAAnBH,EAA6B,IAA7BA,CAAf;AACAK,MAAAA,MAAM,CAACR,OAAPQ,CAAeP,OAAfO,EAAwBF,QAAxBE;AACAL,MAAAA,QAAQ,CAACO,WAATP;AACA;;AACD,WAAO;AAAEQ,MAAAA,IAAI,EAAEd;AAAR,KAAP;AACA,GAZD;AAaA;;SAEQQ,gB,CAAiBJ,O,EAA0B;AACnDL,EAAAA,SAAS,CAACK,OAAO,CAACW,UAARX,EAAD,EAAuB,yCAAvB,CAATL;AACA","sourcesContent":["import { invariant } from '@react-dnd/invariant'\nimport type {\n\tDragDropManager,\n\tSentinelAction,\n\tDragDropMonitor,\n} from '../../interfaces.js'\nimport { END_DRAG } from './types.js'\n\nexport function createEndDrag(manager: DragDropManager) {\n\treturn function endDrag(): SentinelAction {\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tverifyIsDragging(monitor)\n\n\t\tconst sourceId = monitor.getSourceId()\n\t\tif (sourceId != null) {\n\t\t\tconst source = registry.getSource(sourceId, true)\n\t\t\tsource.endDrag(monitor, sourceId)\n\t\t\tregistry.unpinSource()\n\t\t}\n\t\treturn { type: END_DRAG }\n\t}\n}\n\nfunction verifyIsDragging(monitor: DragDropMonitor) {\n\tinvariant(monitor.isDragging(), 'Cannot call endDrag while not dragging.')\n}\n"]},"metadata":{},"sourceType":"module"}